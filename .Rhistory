write.csv(feature_counts, "feature_counts.csv", row.names = TRUE)
feature_counts <- na.omit(feature_counts)
parks_data = read.csv("Seattle_Parks_and_Recreation_Parks_Features_20240515.csv")
# Function to calculate distance of park from Seattle city center
calculate_distance <- function(lat1, lon1, lat2, lon2) {
earth_radius <- 6371
deg_lat <- deg2rad(lat2 - lat1)
deg_lon <- deg2rad(lon2 - lon1)
# Haversine formula
a <- sin(deg_lat/2) * sin(deg_lat/2) + cos(deg2rad(lat1)) * cos(deg2rad(lat2)) * sin(deg_lon/2) * sin(deg_lon/2)
c <- 2 * atan2(sqrt(a), sqrt(1-a))
distance_km <- earth_radius * c
return(distance_km)
}
# Function to convert degrees to radians
deg2rad <- function(deg) {
return(deg * pi / 180)
}
# Seattle city center coordinates
city_center_lat <- 47.608013
city_center_lon <- -122.335167
# Calculate distance from Seattle city center for each park and make new column
parks_data$distance_from_center <- calculate_distance(city_center_lat, city_center_lon, parks$yPos, parks$xPos)
library(dplyr)
library(tidyr)
library(ggplot2)
Seattle_Park_data <- read.csv("Seattle_Parks_and_Recreation_Parks_Features_20240515.csv")
feature_counts <- Seattle_Park_data %>%
separate_rows (Feature_Desc, sep =",, ") %>%
group_by(Feature_Desc) %>%
summarise(Count = n()) %>%
filter(Count >= 25 | Count <= 3) %>%
arrange(desc(Count))
feature_counts
ggplot(feature_counts, aes(x = reorder(Feature_Desc, -Count), y = Count)) +
geom_col(fill ="steelblue") +
labs(x = "Feature", y ="Count", title = "Ranking of Features and Amenities by Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 6))
write.csv(feature_counts, "feature_counts.csv", row.names = TRUE)
ggplot(feature_counts, aes(x = reorder(Feature_Desc, -Count), y = Count)) +
geom_col(fill ="steelblue") +
labs(x = "Feature", y ="Count", title = "Ranking of Features and Amenities by Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 6))
